{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SlotTable=_ref=>{let{slots,onViewUser,onForceExit}=_ref;const formatDate=dateString=>{if(!dateString)return'N/A';const date=new Date(dateString);return date.toLocaleString();};return/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Slot Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Entry Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:slots.map(slot=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:slot.slotNumber}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"badge \".concat(slot.occupied?'badge-danger':'badge-success'),children:slot.occupied?'Occupied':'Available'})}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(slot.entryTime)}),/*#__PURE__*/_jsx(\"td\",{children:slot.occupied?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",style:{marginRight:'10px'},onClick:()=>onViewUser(slot.slotNumber),children:\"View User\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>onForceExit(slot.slotNumber),children:\"Force Exit\"})]}):/*#__PURE__*/_jsx(\"span\",{children:\"No actions available\"})})]},slot._id))})]})});};export default SlotTable;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SlotTable","_ref","slots","onViewUser","onForceExit","formatDate","dateString","date","Date","toLocaleString","className","children","map","slot","slotNumber","concat","occupied","entryTime","style","marginRight","onClick","_id"],"sources":["C:/Users/srajp/Desktop/sunday/admin/src/components/SlotTable.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst SlotTable = ({ slots, onViewUser, onForceExit }) => {\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Slot Number</th>\r\n            <th>Status</th>\r\n            <th>Entry Time</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slots.map((slot) => (\r\n            <tr key={slot._id}>\r\n              <td>{slot.slotNumber}</td>\r\n              <td>\r\n                <span className={`badge ${slot.occupied ? 'badge-danger' : 'badge-success'}`}>\r\n                  {slot.occupied ? 'Occupied' : 'Available'}\r\n                </span>\r\n              </td>\r\n              <td>{formatDate(slot.entryTime)}</td>\r\n              <td>\r\n                {slot.occupied ? (\r\n                  <>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      style={{ marginRight: '10px' }}\r\n                      onClick={() => onViewUser(slot.slotNumber)}\r\n                    >\r\n                      View User\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => onForceExit(slot.slotNumber)}\r\n                    >\r\n                      Force Exit\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <span>No actions available</span>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotTable; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,KAAK,CAAEC,UAAU,CAAEC,WAAY,CAAC,CAAAH,IAAA,CACnD,KAAM,CAAAI,UAAU,CAAIC,UAAU,EAAK,CACjC,GAAI,CAACA,UAAU,CAAE,MAAO,KAAK,CAC7B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,MAAO,CAAAC,IAAI,CAACE,cAAc,CAAC,CAAC,CAC9B,CAAC,CAED,mBACEd,IAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9Bd,KAAA,UAAAc,QAAA,eACEhB,IAAA,UAAAgB,QAAA,cACEd,KAAA,OAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBhB,IAAA,OAAAgB,QAAA,CAAI,QAAM,CAAI,CAAC,cACfhB,IAAA,OAAAgB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhB,IAAA,OAAAgB,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRhB,IAAA,UAAAgB,QAAA,CACGT,KAAK,CAACU,GAAG,CAAEC,IAAI,eACdhB,KAAA,OAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAKE,IAAI,CAACC,UAAU,CAAK,CAAC,cAC1BnB,IAAA,OAAAgB,QAAA,cACEhB,IAAA,SAAMe,SAAS,UAAAK,MAAA,CAAWF,IAAI,CAACG,QAAQ,CAAG,cAAc,CAAG,eAAe,CAAG,CAAAL,QAAA,CAC1EE,IAAI,CAACG,QAAQ,CAAG,UAAU,CAAG,WAAW,CACrC,CAAC,CACL,CAAC,cACLrB,IAAA,OAAAgB,QAAA,CAAKN,UAAU,CAACQ,IAAI,CAACI,SAAS,CAAC,CAAK,CAAC,cACrCtB,IAAA,OAAAgB,QAAA,CACGE,IAAI,CAACG,QAAQ,cACZnB,KAAA,CAAAE,SAAA,EAAAY,QAAA,eACEhB,IAAA,WACEe,SAAS,CAAC,mBAAmB,CAC7BQ,KAAK,CAAE,CAAEC,WAAW,CAAE,MAAO,CAAE,CAC/BC,OAAO,CAAEA,CAAA,GAAMjB,UAAU,CAACU,IAAI,CAACC,UAAU,CAAE,CAAAH,QAAA,CAC5C,WAED,CAAQ,CAAC,cACThB,IAAA,WACEe,SAAS,CAAC,gBAAgB,CAC1BU,OAAO,CAAEA,CAAA,GAAMhB,WAAW,CAACS,IAAI,CAACC,UAAU,CAAE,CAAAH,QAAA,CAC7C,YAED,CAAQ,CAAC,EACT,CAAC,cAEHhB,IAAA,SAAAgB,QAAA,CAAM,sBAAoB,CAAM,CACjC,CACC,CAAC,GA5BEE,IAAI,CAACQ,GA6BV,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}